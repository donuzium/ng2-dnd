{
  "version": 3,
  "file": "ng2-dnd.umd.js",
  "sources": [
    "ng://ng2-dnd/ng2-dnd.ts",
    "ng://ng2-dnd/public_api.ts",
    "ng://ng2-dnd/src/dnd.module.ts",
    "ng://ng2-dnd/src/sortable.component.ts",
    "ng://ng2-dnd/src/droppable.component.ts",
    "ng://ng2-dnd/src/draggable.component.ts",
    "ng://ng2-dnd/src/abstract.component.ts",
    "ng://ng2-dnd/src/dnd.service.ts",
    "ng://ng2-dnd/src/dnd.config.ts",
    "ng://ng2-dnd/src/dnd.utils.ts",
    "ng://ng2-dnd/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nexport * from './src/dnd.module';",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\n\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService, dragDropServiceFactory, dragDropSortableServiceFactory} from './dnd.service';\nimport {DraggableComponent, DraggableHandleComponent} from './draggable.component';\nimport {DroppableComponent} from './droppable.component';\nimport {SortableContainer, SortableComponent, SortableHandleComponent} from './sortable.component';\n\nexport * from './abstract.component';\nexport * from './dnd.config';\nexport * from './dnd.service';\nexport * from './draggable.component';\nexport * from './droppable.component';\nexport * from './sortable.component';\n\nexport let providers = [\n    DragDropConfig,\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\n];\n\n@NgModule({\n  declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n  exports : [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n\n})\nexport class DndModule {\n  static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: DndModule,\n            providers: providers\n        };\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\nimport {FormArray} from '@angular/forms';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService} from './dnd.service';\n\n@Directive({ selector: '[dnd-sortable-container]' })\nexport class SortableContainer extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    private _sortableData: Array<any>|FormArray = [];\n    private sortableHandler: SortableFormArrayHandler|SortableArrayHandler;\n\n    @Input() set sortableData(sortableData: Array<any>|FormArray) {\n        this._sortableData = sortableData;\n        if (sortableData instanceof FormArray) {\n            this.sortableHandler = new SortableFormArrayHandler();\n        } else {\n            this.sortableHandler = new SortableArrayHandler();\n        }\n        //\n        this.dropEnabled = !!this._sortableData;\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n    }\n    get sortableData(): Array<any>|FormArray {\n        return this._sortableData;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, cdr:ChangeDetectorRef,\n        private _sortableDataService: DragDropSortableService) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this.dragEnabled = false;\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n            // Check does element exist in sortableData of this Container\n            if (this.indexOf(item) === -1) {\n                // Let's add it\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this.insertItemAt(item, 0);\n                this._sortableDataService.sortableContainer = this;\n                this._sortableDataService.index = 0;\n            }\n            // Refresh changes in properties of container component\n            this.detectChanges();\n        }\n    }\n\n    getItemAt(index: number): any {\n        return this.sortableHandler.getItemAt(this._sortableData, index);\n    }\n\n    indexOf(item: any): number {\n        return this.sortableHandler.indexOf(this._sortableData, item);\n    }\n\n    removeItemAt(index: number): void {\n        this.sortableHandler.removeItemAt(this._sortableData, index);\n    }\n\n    insertItemAt(item: any, index: number) {\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\n    }\n}\n\nclass SortableArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData[index];\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.splice(index, 1);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.splice(index, 0, item);\n    }\n}\n\nclass SortableFormArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData.at(index);\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.controls.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.removeAt(index);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.insert(index, item);\n    }\n}\n\n@Directive({ selector: '[dnd-sortable]' })\nexport class SortableComponent extends AbstractComponent {\n\n    @Input('sortableIndex') index: number;\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output(\"onDragStart\") onDragStartCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragOver\") onDragOverCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragEnd\") onDragEndCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDropSuccess\") onDropSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        private _sortableContainer: SortableContainer,\n        private _sortableDataService: DragDropSortableService,\n        cdr:ChangeDetectorRef) {\n        super(elemRef, dragDropService, config, cdr);\n        this.dropZones = this._sortableContainer.dropZones;\n        this.dragEnabled = true;\n        this.dropEnabled = true;\n    }\n\n    _onDragStartCallback(event: Event) {\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = true;\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this._sortableDataService.markSortable(this._elem);\n        // Add dragData\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        //\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragOverCallback(event: Event) {\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n            this._sortableDataService.sortableContainer = this._sortableContainer;\n            this._sortableDataService.index = this.index;\n            this._sortableDataService.markSortable(this._elem);\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\n        }\n    }\n\n    _onDragEndCallback(event: Event) {\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = false;\n        this._sortableDataService.sortableContainer = null;\n        this._sortableDataService.index = null;\n        this._sortableDataService.markSortable(null);\n        // Add dragGata\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        //\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            this._sortableDataService.markSortable(this._elem);\n            if ((this.index !== this._sortableDataService.index) ||\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n                // Get item\n                let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this._sortableContainer.insertItemAt(item, this.index);\n                if (this._sortableContainer.dropEnabled) {\n                    this._sortableContainer.dropEnabled = false;\n                }\n                this._sortableDataService.sortableContainer = this._sortableContainer;\n                this._sortableDataService.index = this.index;\n                this.detectChanges();\n            }\n        }\n    }\n\n    _onDropCallback (event: Event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n            if (this._dragDropService.onDragSuccessCallback) {\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n            }\n            // Refresh changes in properties of container component\n            this._sortableContainer.detectChanges();\n        }\n    }\n}\n\n@Directive({ selector: '[dnd-sortable-handle]' })\nexport class SortableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: SortableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-droppable]' })\nexport class DroppableComponent extends AbstractComponent {\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drop action completes correctly.\n     * It is activated before the on-drag-success callback.\n     */\n    @Output() onDropSuccess: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnter: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragOver: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragLeave: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    @Input(\"allowDrop\") set allowdrop(value: (dropData: any) => boolean) {\n        this.allowDrop = value;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n\n        this.dropEnabled = true;\n    }\n\n    _onDragEnterCallback(event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragEnterClass);\n            this.onDragEnter.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    }\n\n    _onDragOverCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragOverClass);\n            this.onDragOver.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDragLeaveCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n            this.onDragLeave.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDropCallback (event: MouseEvent) {\n        let dataTransfer = (event as any).dataTransfer;\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\n            this.onDropSuccess.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            if (this._dragDropService.onDragSuccessCallback) {\n                this._dragDropService.onDragSuccessCallback.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            }\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n        }\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig, DragImage} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-draggable]' })\nexport class DraggableComponent extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drag actions happened.\n     */\n    @Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    @Input() dragImage: string | DragImage | Function;\n\n    \n    @Input() cloneItem: boolean;\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this._defaultCursor = this._elem.style.cursor;\n        this.dragEnabled = true;\n    }\n\n    _onDragStartCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        this._elem.classList.add(this._config.onDragStartClass);\n        //\n        this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\n    }\n\n    _onDragEndCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._elem.classList.remove(this._config.onDragStartClass);\n        //\n        this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\n    }\n}\n\n\n@Directive({ selector: '[dnd-draggable-handle]' })\nexport class DraggableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: DraggableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, ChangeDetectorRef, ViewRef} from '@angular/core';\nimport {ElementRef} from '@angular/core';\n\nimport { DragDropConfig, DragImage } from './dnd.config';\nimport { DragDropService } from './dnd.service';\nimport { isString, isFunction, isPresent, createImage, callFun } from './dnd.utils';\n\n@Injectable()\nexport abstract class AbstractComponent {\n    _elem: HTMLElement;\n    _dragHandle: HTMLElement;\n    _dragHelper: HTMLElement;\n    _defaultCursor: string;\n\n    /**\n     * Last element that was mousedown'ed\n     */\n    _target: EventTarget;\n\n    /**\n     * Whether the object is draggable. Default is true.\n     */\n    private _dragEnabled: boolean = false;\n    set dragEnabled(enabled: boolean) {\n        this._dragEnabled = !!enabled;\n        this._elem.draggable = this._dragEnabled;\n    }\n    get dragEnabled(): boolean {\n        return this._dragEnabled;\n    }\n\n    /**\n     * Allows drop on this element\n     */\n    dropEnabled: boolean = false;\n    /**\n     * Drag effect\n     */\n    effectAllowed: string;\n    /**\n     * Drag cursor\n     */\n    effectCursor: string;\n\n    /**\n     * Restrict places where a draggable element can be dropped. Either one of\n     * these two mechanisms can be used:\n     *\n     * - dropZones: an array of strings that permits to specify the drop zones\n     *   associated with this component. By default, if the drop-zones attribute\n     *   is not specified, the droppable component accepts drop operations by\n     *   all the draggable components that do not specify the allowed-drop-zones\n     *\n     * - allowDrop: a boolean function for droppable components, that is checked\n     *   when an item is dragged. The function is passed the dragData of this\n     *   item.\n     *   - if it returns true, the item can be dropped in this component\n     *   - if it returns false, the item cannot be dropped here\n     */\n    allowDrop: (dropData: any) => boolean;\n    dropZones: string[] = [];\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and optional offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    dragImage: string | DragImage | Function;\n\n    cloneItem: boolean = false;\n\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _cdr: ChangeDetectorRef) {\n\n        // Assign default cursor unless overridden\n        this._defaultCursor = _config.defaultCursor;\n        this._elem = elemRef.nativeElement;\n        this._elem.style.cursor = this._defaultCursor;  // set default cursor on our element\n        //\n        // DROP events\n        //\n        this._elem.ondragenter = (event: Event) => {\n            this._onDragEnter(event);\n        };\n        this._elem.ondragover = (event: DragEvent) => {\n            this._onDragOver(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\n            }\n\n            return false;\n        };\n        this._elem.ondragleave = (event: Event) => {\n            this._onDragLeave(event);\n        };\n        this._elem.ondrop = (event: Event) => {\n            this._onDrop(event);\n        };\n        //\n        // Drag events\n        //\n        this._elem.onmousedown = (event: MouseEvent) => {\n            this._target = event.target;\n        };\n        this._elem.ondragstart = (event: DragEvent) => {\n            if (this._dragHandle) {\n                if (!this._dragHandle.contains(<Element>this._target)) {\n                    event.preventDefault();\n                    return;\n                }\n            }\n\n            this._onDragStart(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.setData('text', '');\n                // Change drag effect\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\n                // Change drag image\n                if (isPresent(this.dragImage)) {\n                    if (isString(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(createImage(<string>this.dragImage));\n                    } else if (isFunction(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(callFun(<Function>this.dragImage));\n                    } else {\n                        let img: DragImage = <DragImage>this.dragImage;\n                        (<any>event.dataTransfer).setDragImage(img.imageElement, img.x_offset, img.y_offset);\n                    }\n                } else if (isPresent(this._config.dragImage)) {\n                    let dragImage: DragImage = this._config.dragImage;\n                    (<any>event.dataTransfer).setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n                } else if (this.cloneItem) {\n                    this._dragHelper = <HTMLElement>this._elem.cloneNode(true);\n                    this._dragHelper.classList.add('dnd-drag-item');\n                    this._dragHelper.style.position = \"absolute\";\n                    this._dragHelper.style.top = \"0px\";\n                    this._dragHelper.style.left = \"-1000px\";\n                    this._elem.parentElement.appendChild(this._dragHelper);\n                    (<any>event.dataTransfer).setDragImage(this._dragHelper, event.offsetX, event.offsetY);\n                }\n\n                // Change drag cursor\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n\n                if (this._dragEnabled) {\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\n                } else {\n                    cursorelem.style.cursor = this._defaultCursor;\n                }\n            }\n        };\n\n        this._elem.ondragend = (event: Event) => {\n            if (this._elem.parentElement && this._dragHelper) {\n                this._elem.parentElement.removeChild(this._dragHelper);\n            }\n            // console.log('ondragend', event.target);\n            this._onDragEnd(event);\n            // Restore style of dragged element\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n            cursorelem.style.cursor = this._defaultCursor;\n        };\n    }\n\n    public setDragHandle(elem: HTMLElement) {\n        this._dragHandle = elem;\n    }\n    /******* Change detection ******/\n\n    detectChanges () {\n        // Programmatically run change detection to fix issue in Safari\n        setTimeout(() => {\n            if ( this._cdr && !(this._cdr as ViewRef).destroyed ) {\n                this._cdr.detectChanges();\n            }\n        }, 250);\n    }\n\n    //****** Droppable *******//\n    private _onDragEnter(event: Event): void {\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragEnterCallback(event);\n        }\n    }\n\n    private _onDragOver(event: Event) {\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // The element is over the same source element - do nothing\n            if (event.preventDefault) {\n                // Necessary. Allows us to drop.\n                event.preventDefault();\n            }\n\n            this._onDragOverCallback(event);\n        }\n    }\n\n    private _onDragLeave(event: Event): void {\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragLeaveCallback(event);\n        }\n    }\n\n    private _onDrop(event: Event): void {\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // Necessary. Allows us to drop.\n            this._preventAndStop(event);\n\n            this._onDropCallback(event);\n\n            this.detectChanges();\n        }\n    }\n\n    private _isDropAllowed(event: any): boolean {\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\n            // First, if `allowDrop` is set, call it to determine whether the\n            // dragged element can be dropped here.\n            if (this.allowDrop) {\n                return this.allowDrop(this._dragDropService.dragData);\n            }\n\n            // Otherwise, use dropZones if they are set.\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n                return true;\n            }\n            for (let i: number = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n                let dragZone: string = this._dragDropService.allowedDropZones[i];\n                if (this.dropZones.indexOf(dragZone) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private _preventAndStop(event: Event): any {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n\n    //*********** Draggable **********//\n\n    private _onDragStart(event: Event): void {\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\n        if (this._dragEnabled) {\n            this._dragDropService.allowedDropZones = this.dropZones;\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n            this._onDragStartCallback(event);\n            event.stopPropagation();\n        }\n    }\n\n    private _onDragEnd(event: Event): void {\n        this._dragDropService.allowedDropZones = [];\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n        this._onDragEndCallback(event);\n    }\n\n    //**** Drop Callbacks ****//\n    _onDragEnterCallback(event: Event) { }\n    _onDragOverCallback(event: Event) { }\n    _onDragLeaveCallback(event: Event) { }\n    _onDropCallback(event: Event) { }\n\n    //**** Drag Callbacks ****//\n    _onDragStartCallback(event: Event) { }\n    _onDragEndCallback(event: Event) { }\n}\n\nexport class AbstractHandleComponent {\n    _elem: HTMLElement;\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _Component: AbstractComponent, private _cdr: ChangeDetectorRef) {\n        this._elem = elemRef.nativeElement;\n        this._Component.setDragHandle(this._elem);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, EventEmitter} from '@angular/core';\n\nimport {DragDropConfig} from './dnd.config';\nimport {isPresent} from './dnd.utils';\nimport {SortableContainer} from './sortable.component';\n\nexport class DragDropData {\n    dragData: any;\n    mouseEvent: MouseEvent;\n}\n\nexport function dragDropServiceFactory(): DragDropService  {\n    return new DragDropService();\n}\n\n@Injectable()\nexport class DragDropService {\n    allowedDropZones: Array<string> = [];\n    onDragSuccessCallback: EventEmitter<DragDropData>;\n    dragData: any;\n    isDragged: boolean;\n}\n\nexport function dragDropSortableServiceFactory(config: DragDropConfig): DragDropSortableService  {\n    return new DragDropSortableService(config);\n}\n\n@Injectable()\nexport class DragDropSortableService {\n    index: number;\n    sortableContainer: SortableContainer;\n    isDragged: boolean;\n\n    private _elem: HTMLElement;\n    public get elem(): HTMLElement {\n        return this._elem;\n    }\n\n    constructor(private _config:DragDropConfig) {}\n\n    markSortable(elem: HTMLElement) {\n        if (isPresent(this._elem)) {\n            this._elem.classList.remove(this._config.onSortableDragClass);\n        }\n        if (isPresent(elem)) {\n            this._elem = elem;\n            this._elem.classList.add(this._config.onSortableDragClass);\n        }\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {isString} from './dnd.utils';\n\nexport class DataTransferEffect {\n\n    static COPY = new DataTransferEffect('copy');\n    static LINK = new DataTransferEffect('link');\n    static MOVE = new DataTransferEffect('move');\n    static NONE = new DataTransferEffect('none');\n\n    constructor(public name: string) { }\n}\n\nexport class DragImage {\n    constructor(\n        public imageElement: any,\n        public x_offset: number = 0,\n        public y_offset: number = 0) {\n            if (isString(this.imageElement)) {\n                // Create real image from string source\n                let imgScr: string = <string>this.imageElement;\n                this.imageElement = new HTMLImageElement();\n                (<HTMLImageElement>this.imageElement).src = imgScr;\n            }\n        }\n}\n\nexport class DragDropConfig {\n    public onDragStartClass: string = \"dnd-drag-start\";\n    public onDragEnterClass: string = \"dnd-drag-enter\";\n    public onDragOverClass: string = \"dnd-drag-over\";\n    public onSortableDragClass: string = \"dnd-sortable-drag\";\n\n    public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dragCursor: string = \"move\";\n    public dragImage: DragImage;\n    public defaultCursor: string = \"pointer\";\n}",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\n/**\n * Check and return true if an object is type of string\n */\nexport function isString(obj:any) {\n    return typeof obj === \"string\";\n}\n\n/**\n * Check and return true if an object not undefined or null\n */\nexport function isPresent(obj: any) {\n    return obj !== undefined && obj !== null;\n}\n\n/**\n * Check and return true if an object is type of Function\n */\nexport function isFunction(obj: any) {\n    return typeof obj === \"function\";\n}\n\n/**\n * Create Image element with specified url string\n */\nexport function createImage(src: string) {\n    let img:HTMLImageElement = new HTMLImageElement();\n    img.src = src;\n    return img;\n}\n\n/**\n * Call the function\n */\nexport function callFun(fun: Function) {\n    return fun();\n}",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n"
  ],
  "names": [
    "tslib_1.__metadata",
    "tslib_1.__decorate",
    "EventEmitter",
    "SortableContainer",
    "DragDropSortableService",
    "ElementRef",
    "DragDropService",
    "ChangeDetectorRef",
    "Input",
    "AbstractComponent",
    "FormArray",
    "DroppableComponent",
    "Directive",
    "Output",
    "DraggableHandleComponent",
    "DraggableComponent",
    "Injectable"
  ],
  "mappings": "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"
}
